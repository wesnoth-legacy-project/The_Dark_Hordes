#textdomain wesnoth-The_Dark_Hordes

# Prevent the recall list from being filled by unnecessary corpses.
# TODO: better code
[event]
    name=prestart
    [kill]
        type=Walking Corpse
        side=1,2
        [filter_wml]
            experience=0
            [or]
                experience=1
            [/or]
            [or]
                experience=2
            [/or]
            [or]
                experience=3
            [/or]
            [or]
                experience=4
            [/or]
            [or]
                experience=5
            [/or]
            [or]
                experience=6
            [/or]
            [or]
                experience=7
            [/or]
        [/filter_wml]
    [/kill]
[/event]

[event]
    name=prestart
    [store_locations]
        terrain=*^Ecf,*^Ebn
        variable=campfires
    [/store_locations]
    [for]
        array=campfires
        [do]
            [sound_source]
                id=campfire[$i]
                x,y=$campfires[$i].x,$campfires[$i].y
                sounds=ambient/campfire.ogg
                delay=0
                chance=100
                full_range=2
                fade_range=6
            [/sound_source]
        [/do]
    [/for]

    {CLEAR_VARIABLE campfires}
[/event]

# some manual recruit animations for leaders who don't usually have them
[event]
    name=prerecruit
    first_time_only=no
    [filter_second]
        type=Orcish Sovereign,Death Squire,Death Knight,Sergeant,Lieutenant,General
    [/filter_second]
    first_time_only=no
    [animate_unit]
        [filter]
            id=$second_unit.id
        [/filter]

        flag=leading
    [/animate_unit]
[/event]

#
# Transform into a Lich from a Necromancer
# Roughly copied from SotA, please refer to sota-utils.cfg
#

[event]
    name=lichify
    first_time_only=no

    # This is just to get a more descriptive name for the "unit" variable.
    [set_variables]
        name=stored_necromancer
        mode=replace
        to_variable=unit
    [/set_variables]

    # The necromancer may have AMLAd and had its experience reset to 0. Now, as a
    # lich, there is a fourth level available for the unit, and all that experience
    # should be applied towards the level-up instead of simply being lost. We will
    # "unwind" each AMLA and calculate how much it cost, so we can give back those
    # experience points.
    [set_variable]
        name=num_amlas
        # This gives us the number of AMLAs that the unit has had:
        value=$stored_necromancer.modifications.advancement.length
    [/set_variable]
    [set_variable]
        # The experience that will be used for the new lich will be at least
        # the necromancer's current actual experience.
        name=experience_gained_after_max_level
        value=$stored_necromancer.experience
    [/set_variable]
    [set_variable]
        # Each AMLA took 20% more experience, so we will need to reduce this
        # value as we unwind them. The variable starts out storing the amount
        # needed for the *next* AMLA, so we will need to reduce it one step as
        # the first operation.
        name=experience_for_one_amla
        value=$stored_necromancer.max_experience
    [/set_variable]

    [while]
        [variable]
            name=num_amlas
            greater_than=0
        [/variable]
        [do]
            [set_variable]
                # Each AMLA increased the experience needed by 20%, which
                # is the same as multiplying by 1.2. We reverse that here.
                name=experience_for_one_amla
                divide=1.2
            [/set_variable]
            [set_variable]
                # Round it off in case it's a float:
                name=experience_for_one_amla
                round=0
            [/set_variable]
            [set_variable]
                # Add the experience that was needed for the previous AMLA
                # to the amount that will be given to the lich:
                name=experience_gained_after_max_level
                add=$experience_for_one_amla
            [/set_variable]
            [set_variable]
                name=num_amlas
                sub=1
            [/set_variable]
        [/do]
    [/while]

    [set_variable]
        name=lich_type
        value=Lich
    [/set_variable]

    # We are going to create a new unit instead of transforming the old one.
    # Using the old unit would leave its AMLAs in effect, changing the hitpoints
    # and experience needed to level up.
    [unit]
        side=1
        type=$lich_type
        x=$stored_necromancer.x
        y=$stored_necromancer.y
        id=$stored_necromancer.id
        name=$stored_necromancer.name
        facing=$stored_necromancer.facing
        moves=$stored_necromancer.moves
        hitpoints=$stored_necromancer.hitpoints
        canrecruit=$stored_necromancer.canrecruit
        attacks_left=$stored_necromancer.attacks_left
        experience=$experience_gained_after_max_level

        # Copy the original traits into the new unit:
        [modifications]
            [insert_tag]
                name=trait
                variable=stored_necromancer.modifications.trait[0]
            [/insert_tag]
            [insert_tag]
                name=trait
                variable=stored_necromancer.modifications.trait[1]
            [/insert_tag]
        [/modifications]

        to_variable=new_lich  # Don't create the unit yet. Just store it.
    [/unit]

    # Hitpoints are transferred to the new unit so that turning into a lich doesn't
    # heal it. However, this could result in the lich having more HP than its
    # maximum. If that is the case, we will reset it to the maximum.
    [if]
        [variable]
            name=new_lich.hitpoints
            greater_than=$new_lich.max_hitpoints
        [/variable]
        [then]
            [set_variable]
                name=new_lich.hitpoints
                value=$new_lich.max_hitpoints
            [/set_variable]
        [/then]
    [/if]

    # Liches have one more movement point than necromancers. We will give that point
    # to them as long as they have not attacked yet and were not just recruited on
    # this turn. Checking attacks_left takes both possibilities into account.
    [if]
        [variable]
            name=new_lich.attacks_left
            not_equals=0
        [/variable]
        [then]
            [set_variable]
                name=new_lich.moves
                add=1
            [/set_variable]
        [/then]
    [/if]

    [sound]
        name=magic-dark-big.ogg
    [/sound]

    [unstore_unit]
        # The unit will be automatically advanced to Ancient Lich at
        # this point if its experience is sufficient. Theoretically,
        # it could even AMLA.
        variable=new_lich
        text= _ "Lich"  # This text goes by quickly, so it must be short.
        red,green,blue=220,0,220  # dark-magic purple
        animate=yes
    [/unstore_unit]

    [clear_variable]
        name=stored_necromancer, new_lich, lich_type, num_amlas, experience_for_one_amla, experience_gained_after_max_level
    [/clear_variable]
[/event]
